[["index.html", "Term project draft Chapter 1 Introduction", " Term project draft Kipling Klimas 2021-04-27 Chapter 1 Introduction Wildfires can have significant impacts on both ecosystems and human assets in forested environments. In the fire-prone mixed conifer/aspen forests of the Intermountain West (IW) fuel reduction treatments including stand thinning, mastication, aspen promotion and prescribed fire are implemented to reduce the risk, incidence and/or extent of destructive, high severity wildfire. Due to the high value of forested resources in the IW and the risk of post-fire sediment transport or debris flows downstream from burned areas, fuel reduction treatments are important landscape-scale tools that forest managers use to protect forest assets. However, the complex and pyrophytic nature of IW forests, along environmental and societal constraints, lends to barriers against spatially targeted implementation of fuel reduction treatments in high-value forested watersheds (Larson &amp; Churchill, 2012). Modeling the effect of fuel reduction treatments on fire behavior in fire-prone forests of the western United States has shown that targeted fuel reduction treatments are more effective at altering fire behavior (i.e. rate of spread, flame length) than randomly or indiscriminately applied treatments (Kim et al., 2009; Minas et al., 2014; Prichard et al., 2020). The spatial distribution of treatments must then follow a prioritization hierarchy, such as concentrated, dispersed or regularly arranged treated areas within a forest (Kim et al., 2009), but the economic trade-off and efficacy of treatment distribution warrants greater examination in IW forests, where fuel treatments are applied to reduce the risk of high severity wildfire (Barros et al., 2019). By altering fire behavior through landscape-scale treatments, forest managers hope to reduce the extent of high-severity burned areas and mitigate downstream consequences of high-severity wildfire, such as the development of debris flows which can have negative impacts on high value assets such as reservoirs or fish habitat. "],["data.html", "Chapter 2 Data description and database structure", " Chapter 2 Data description and database structure Forest strcuture and fuels data are needed to model fire behavior and predict burn severity spatially. Figure 1: databse structure for forest and fuels inventory. This database structure is compatible with tree and stand level forest simulation software such as the Forest Vegetation Simulator (FVS) which can be used to model forest structure over time. An advantage of this approach and structure is these data allow detailed simulation of mortality during fire. Tree level data are related to plot polygons that allow for stand-level simulation. Fuels data is required for modeled fire behavior, such as flame length, rate or spread or fire type (surface, passive or active). Whether or not these tables become populated remains to be seen- a disadvantage of this approach is that fuel reduction treatments are not readily applied to the landscape in question. It is also only useable for fire behavior modeling as an ArcMap toolbar extension. "],["creation.html", "Chapter 3 Database creation", " Chapter 3 Database creation Start Install and open packages RSQLite install.packages(&quot;RSQLite&quot;) library(RSQLite) Establish database connection Connecting to the term_project database term_project &lt;- dbConnect(drv = RSQLite::SQLite(), &quot;C:/Users/A02345823/Box/Lab_Group/Kipling/Classes/WILD6900_EcoRepSci/Term_project/Term_project/database/severity.db&quot;) Create severity table Term project database creation based on structure in figure 1 dbExecute(term_project, &quot;CREATE TABLE severity( severity_id integer NOT NULL PRIMARY KEY, MTBSdNBR float, severity float );&quot;) Create forest behavior table dbExecute(term_project, &quot;CREATE TABLE forest_behavior( forest_behave_id integer NOT NULL PRIMARY KEY, severity_id float, flmlnA float, flmlnE float, flmlnH float, flmlnL float, flmlnM float, ftype_E float, ftype_H float, ftype_L float, ftype_M float, ros float, rosE float, rosH float, rosL float, rosM float, FOREIGN KEY(severity_id) REFERENCES severity(severity_id) );&quot;) Create forest risk table dbExecute(term_project, &quot;CREATE TABLE forest_risk( forest_risk_id integer NOT NULL PRIMARY KEY, severity_id float, fri float, fti float, sdr varchar(12), WHP float, FOREIGN KEY(severity_id) REFERENCES severity(severity_id) );&quot;) Create forest_structure table dbExecute(term_project, &quot;CREATE TABLE forest_structure( str_id integer NOT NULL PRIMARY KEY, severity_id float, wwacbd float, wwacbh float, wwacc float, wwach float, wwafuel13 float, wwafuel40 float, FOREIGN KEY(severity_id) REFERENCES severity(severity_id) );&quot;) Create forest_topo table dbExecute(term_project, &quot;CREATE TABLE forest_topo( forest_topo_id integer NOT NULL PRIMARY KEY, severity_id float, asp varchar(5), dem float, slope float, FOREIGN KEY(severity_id) REFERENCES severity(severity_id) );&quot;) Create forest_veg table dbExecute(term_project, &quot;CREATE TABLE forest_veg( forest_veg_id integer NOT NULL PRIMARY KEY, severity_id float, EVT varchar(60), SystGrp varchar(60), SAFSrm varchar(60), NVCSOrd varchar(16), NVCSclass varchar(25), NVCSsubclass varchar(40), SYSTMGRPPH varchar(30), FOREIGN KEY(severity_id) REFERENCES severity(severity_id) );&quot;) Create non-forest db tables Create non-forest behavior table dbExecute(term_project, &quot;CREATE TABLE nf_behavior( nf_behave_id integer NOT NULL PRIMARY KEY, severity_id float, flmlnA float, flmlnE float, flmlnH float, flmlnL float, flmlnM float, ftype_E float, ftype_H float, ftype_L float, ftype_M float, ros float, rosE float, rosH float, rosL float, rosM float, FOREIGN KEY(severity_id) REFERENCES severity(severity_id) );&quot;) Create non-forest risk table dbExecute(term_project, &quot;CREATE TABLE nf_risk( nf_risk_id integer NOT NULL PRIMARY KEY, severity_id float, fri float, fti float, sdr varchar(12), WHP float, FOREIGN KEY(severity_id) REFERENCES severity(severity_id) );&quot;) Create non-forest_structure table dbExecute(term_project, &quot;CREATE TABLE nf_structure( nf_str_id integer NOT NULL PRIMARY KEY, severity_id float, wwacbd float, wwacbh float, wwacc float, wwach float, wwafuel13 float, wwafuel40 float, FOREIGN KEY(severity_id) REFERENCES severity(severity_id) );&quot;) Create non-forest_topo table dbExecute(term_project, &quot;CREATE TABLE nf_topo( nf_topo_id integer NOT NULL PRIMARY KEY, severity_id float, asp varchar(5), dem float, slope float, FOREIGN KEY(severity_id) REFERENCES severity(severity_id) );&quot;) Create non-forest_veg table dbExecute(term_project, &quot;CREATE TABLE nf_veg( nf_veg_id integer NOT NULL PRIMARY KEY, severity_id float, EVT varchar(60), SystGrp varchar(60), SAFSrm varchar(60), NVCSOrd varchar(16), NVCSclass varchar(25), NVCSsubclass varchar(40), SYSTMGRPPH varchar(30), FOREIGN KEY(severity_id) REFERENCES severity(severity_id) );&quot;) "],["SQL.html", "Chapter 4 Database connection", " Chapter 4 Database connection Start Install package RSQLite install.packages(&quot;RSQLite&quot;) library(RSQLite) Establish datebase connection and create tables severity_db &lt;- dbConnect(drv = RSQLite::SQLite(), &quot;/Users/kiplingklimas/Box/Lab_Group/Kipling/Classes/WILD6900_EcoRepSci/Term_project/Term_project/database/severity.db&quot;) severity &lt;- dbGetQuery(severity_db, &quot;SELECT * FROM severity;&quot;) forest_behavior &lt;- dbGetQuery(severity_db, &quot;SELECT * FROM forest_behavior;&quot;) forest_risk &lt;- dbGetQuery(severity_db, &quot;SELECT * FROM forest_risk;&quot;) forest_structure &lt;- dbGetQuery(severity_db, &quot;SELECT * FROM forest_structure;&quot;) forest_topo &lt;- dbGetQuery(severity_db, &quot;SELECT * FROM forest_topo;&quot;) forest_veg &lt;- dbGetQuery(severity_db, &quot;SELECT * FROM forest_veg;&quot;) nf_behavior &lt;- dbGetQuery(severity_db, &quot;SELECT * FROM nf_behavior;&quot;) nf_risk &lt;- dbGetQuery(severity_db, &quot;SELECT * FROM nf_risk;&quot;) nf_structure &lt;- dbGetQuery(severity_db, &quot;SELECT * FROM nf_structure;&quot;) nf_topo &lt;- dbGetQuery(severity_db, &quot;SELECT * FROM nf_topo;&quot;) nf_veg &lt;- dbGetQuery(severity_db, &quot;SELECT * FROM nf_veg;&quot;) "],["tidyverse.html", "Chapter 5 Data visualization", " Chapter 5 Data visualization Install packages tidyverse and viridis library(tidyverse) ## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ── ## ✓ ggplot2 3.3.3 ✓ purrr 0.3.4 ## ✓ tibble 3.1.1 ✓ dplyr 1.0.5 ## ✓ tidyr 1.1.3 ✓ stringr 1.4.0 ## ✓ readr 1.4.0 ✓ forcats 0.5.1 ## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() library(viridis) ## Loading required package: viridisLite library(RSQLite) library(DBI) library(ggridges) Connect to database ‘severity’ and create tables severity_db &lt;- dbConnect(drv = RSQLite::SQLite(), &quot;/Users/kiplingklimas/Box/Lab_Group/Kipling/Classes/WILD6900_EcoRepSci/Term_project/Term_project/database/severity.db&quot;) severity &lt;- dbGetQuery(severity_db, &quot;SELECT * FROM severity;&quot;) forest_behavior &lt;- dbGetQuery(severity_db, &quot;SELECT * FROM forest_behavior;&quot;) forest_risk &lt;- dbGetQuery(severity_db, &quot;SELECT * FROM forest_risk;&quot;) forest_structure &lt;- dbGetQuery(severity_db, &quot;SELECT * FROM forest_structure;&quot;) forest_topo &lt;- dbGetQuery(severity_db, &quot;SELECT * FROM forest_topo;&quot;) forest_veg &lt;- dbGetQuery(severity_db, &quot;SELECT * FROM forest_veg;&quot;) nf_behavior &lt;- dbGetQuery(severity_db, &quot;SELECT * FROM nf_behavior;&quot;) nf_risk &lt;- dbGetQuery(severity_db, &quot;SELECT * FROM nf_risk;&quot;) nf_structure &lt;- dbGetQuery(severity_db, &quot;SELECT * FROM nf_structure;&quot;) nf_topo &lt;- dbGetQuery(severity_db, &quot;SELECT * FROM nf_topo;&quot;) nf_veg &lt;- dbGetQuery(severity_db, &quot;SELECT * FROM nf_veg;&quot;) This is fire severity dataset shows the relationship between severity measurements and a variety of predictive variables including topographic, vegetation, structural and derived risk indices. Data was differentiated between forest and non-forest points to compare severity relationships between forests and non-forest landcover systems. Simple scatter plot of forest severity by elevation (m) sev &lt;- forest_topo %&gt;% left_join(severity, by = &quot;severity_id&quot;) %&gt;% select(dem, severity) reg &lt;- lm(formula= severity ~ dem, data = sev) regs &lt;- predict(reg, se.fit = TRUE) regs &lt;- data.frame(mean = regs$fit, upr = regs$fit + 1.96 * regs$se.fit, lwr = regs$fit - 1.96 * regs$se.fit) forest_topo %&gt;% left_join(severity, by = &quot;severity_id&quot;) %&gt;% select(dem, severity) %&gt;% ggplot(aes(x = dem, y = severity)) + #geom_ribbon(aes(ymin = regs$lwr, ymax = regs$upr), fill = &quot;gray90&quot;) + geom_line(aes(y = regs$mean)) + geom_point() + labs(y = &quot;Severity (dNBR)&quot;, x = &quot;Elevation (m)&quot;) + theme_light() Density curves of fire type extreme by severity forest_behavior %&gt;% left_join(severity, by = &quot;severity_id&quot;) %&gt;% mutate(ftypeE = case_when( ftype_E == 3 ~ &quot;Surface&quot;, ftype_E == 4 ~ &quot;Passive&quot;, ftype_E == 5 ~ &quot;Passive&quot;, ftype_E == 6 ~ &quot;Active&quot;, ftype_E == 7 ~ &quot;Active&quot;, )) %&gt;% ggplot(aes(y = ftypeE, x = severity, fill = ftypeE)) + ggridges::geom_density_ridges(scale = 8, alpha = 0.5, show.legend = FALSE) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + labs(y = &quot;Density&quot;, x = &quot;Severity&quot;) + scale_color_viridis_d(option = &quot;magma&quot;) + theme_minimal() ## Picking joint bandwidth of 29.2 Bar plot of canopy categories forest_veg %&gt;% left_join(severity, by = &quot;severity_id&quot;) %&gt;% filter(!is.na(severity_id)) %&gt;% ggplot(aes(x = NVCSsubclass, y = severity)) + geom_boxplot() + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + labs(y = &quot;Severity (dNBR)&quot;, x = &quot;Vegetation type&quot;) "],["references.html", "References", " References "]]
